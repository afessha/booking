{"version":3,"sources":["components/footer/Footer.js","redux/actions.js","components/booking/Booking.js","components/seating/Seating.js","components/home/Home.js","App.js","serviceWorker.js","redux/bookingrReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["Footer","className","loadBookings","dispatch","fetch","then","res","json","data","type","initalBookings","connect","addNew","booking","bookingAdd","props","formik","useFormik","initialValues","firstname","lastname","dining_date","number_of_covers","booking_email","phone_number","status","validationSchema","Yup","max","required","email","onSubmit","a","resetForm","axios","post","handleSubmit","name","getFieldProps","touched","errors","state","bookings","markSeated","bookingId","value","console","log","scope","map","index","key","booking_id","onClick","initaliseBookings","useEffect","Card","style","width","Img","variant","src","Body","Title","Text","ListGroup","ListGroupItem","Link","href","App","to","exact","path","component","Home","Booking","Seating","Boolean","window","location","hostname","match","INITAL_BOOKINGS","bookingReducer","action","concat","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0bc453ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../booking/Booking.css\";\r\nconst Footer = () => {\r\n  return <div className=\"footer\"> Awet Fessha Â©2020 </div>;\r\n};\r\nexport default Footer;\r\n","//action types\r\nexport const BOOKING_ADD = \"BOOKING_ADD\";\r\nexport const BOOKING_LOADED = \"BOOKING_LOADED\";\r\nexport const BOOKING_MARK_SEATED = \"BOOKING_MARK_SEATED\";\r\n\r\nexport function loadBookings() {\r\n  return function (dispatch) {\r\n    return fetch(\r\n      \"https://9hgho8x1kg.execute-api.us-east-2.amazonaws.com/default/restaurant-booking\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch(initaliseBookings(data));\r\n      });\r\n  };\r\n}\r\n//action creator\r\nexport function initaliseBookings(initalBookings) {\r\n  return { type: BOOKING_LOADED, initalBookings };\r\n}\r\n\r\nexport function bookingAdd(booking) {\r\n  return { type: BOOKING_ADD, booking };\r\n}\r\n\r\nexport function markSeated(bookingId, value) {\r\n  return { type: BOOKING_MARK_SEATED, bookingId, value };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport \"./Booking.css\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { bookingAdd } from \"../../redux/actions\";\r\n\r\nfunction Booking(props) {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      dining_date: \"\",\r\n      number_of_covers: \"\",\r\n      booking_email: \"\",\r\n      phone_number: \"\",\r\n      status: \"Not arrived\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstname: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n      lastname: Yup.string()\r\n        .max(20, \"Must be 20 characters or less\")\r\n        .required(\"Required\"),\r\n      booking_email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Required\"),\r\n    }),\r\n    onSubmit: async (booking) => {\r\n      props.addNew(booking);\r\n      formik.resetForm();\r\n      await axios.post(\r\n        \"https://a6qroxzfnb.execute-api.eu-west-2.amazonaws.com/dev/bookings\",\r\n        booking\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container\">\r\n          <form className=\"form-signin\" onSubmit={formik.handleSubmit}>\r\n            <h2 className=\"form-signin-heading\">Booking</h2>\r\n            <br />\r\n            <label>First Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"firstname\"\r\n              {...formik.getFieldProps(\"firstname\")}\r\n            />\r\n            {formik.touched.firstname && formik.errors.firstname ? (\r\n              <div className=\"error\">{formik.errors.firstname}</div>\r\n            ) : null}\r\n            <label>Last Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"lastname\"\r\n              {...formik.getFieldProps(\"lastname\")}\r\n            />\r\n            {formik.touched.lastname && formik.errors.lastname ? (\r\n              <div className=\"error\">{formik.errors.lastname}</div>\r\n            ) : null}\r\n            <label> Dining Date</label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"dining_date\"\r\n              type=\"date\"\r\n              {...formik.getFieldProps(\"dining_date\")}\r\n            />\r\n            <label>Number of Covers </label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"number_of_covers\"\r\n              type= \"number\"\r\n              {...formik.getFieldProps(\"number_of_covers\")}\r\n            />\r\n\r\n            <label> Email </label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"booking_email\"\r\n              {...formik.getFieldProps(\"booking_email\")}\r\n            />\r\n            {formik.touched.booking_email && formik.errors.booking_email ? (\r\n              <div className=\"error\">{formik.errors.booking_email}</div>\r\n            ) : null}\r\n            <label>Phone Number</label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"phone_number\"\r\n              {...formik.getFieldProps(\"phone_number\")}\r\n            />\r\n            <button className=\"btn btn-lg btn-success btn-block\" type=\"submit\">\r\n              Book Table\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNew: (booking) => dispatch(bookingAdd(booking)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Booking);\r\n","import React from \"react\";\r\nimport \"./Seating.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { markSeated } from \"../../redux/actions\";\r\n\r\nfunction Seating({ props, bookings, markSeated }) {\r\n  console.log(bookings);\r\n  return (\r\n    <div>\r\n      <h3 className=\"seating-title\">Booking List </h3>\r\n      <div className=\"link-to-booking\"></div>\r\n      <br />\r\n      <br />\r\n\r\n      <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">ID </th>\r\n            <th scope=\"col\">First Name </th>\r\n            <th scope=\"col\">Last Name </th>\r\n            <th scope=\"col\">Dining Date</th>\r\n            <th scope=\"col\">Number of Covers </th>\r\n            <th scope=\"col\">Phone Number</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        {bookings.map((booking, index) => (\r\n          <tbody>\r\n            <tr key={index}>\r\n              <td>{booking.booking_id} </td>\r\n\r\n              <td>{booking.firstname} </td>\r\n\r\n              <td>{booking.lastname} </td>\r\n\r\n              <td>{booking.dining_date} </td>\r\n\r\n              <td>{booking.number_of_covers} </td>\r\n\r\n              <td>{booking.phone_number}</td>\r\n\r\n              <td>{booking.booking_email}</td>\r\n              <td>{booking.status}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => markSeated(booking.booking_id, \"Seated\")}\r\n                >\r\n                  Mark Seated\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookings: state.bookings,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    markSeated: (bookingId, value) => dispatch(markSeated(bookingId, value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Seating);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { loadBookings } from \"../../redux/actions\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport \"./Home.css\";\r\nfunction Home({ initaliseBookings }) {\r\n  useEffect(() => {\r\n    initaliseBookings();\r\n  }, [initaliseBookings]);\r\n  return (\r\n    <div>\r\n      <h3> WELCOME TO OUR RESTAURANT</h3>\r\n      <div className=\"wrapper\">\r\n        <Card style={{ width: \"22rem\" }}>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"https://gobackpacking.com/wp-content/uploads/2011/07/Ethiopian-food.jpg\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Food</Card.Title>\r\n            <Card.Text>\r\n              Eritrean cuisine is tsebhi (stew), served with injera (flatbread\r\n              made from teff, wheat, or sorghum and hilbet (paste made from\r\n              legumes; mainly lentil and faba beans). A typical traditional\r\n              Eritrean dish consists of injera accompanied by a spicy stew,\r\n              which frequently includes beef, goat, lamb and fish.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>Tebsi</ListGroupItem>\r\n            <ListGroupItem>Tsebhi derho</ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Body>\r\n            <Card.Link href=\"https://en.wikipedia.org/wiki/Eritrean_cuisine\">\r\n              Tebsi\r\n            </Card.Link>\r\n            <Card.Link href=\"https://en.wikipedia.org/wiki/Wat_(food)\">\r\n              Tsebhi derho\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card style={{ width: \"22rem\" }}>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"https://cdn2.vox-cdn.com/thumbor/RUoaNnhjLyBi3iyt8h5Lv8EghmU=/1200x0/filters:no_upscale()/cdn2.vox-cdn.com/uploads/chorus_asset/file/7524145/untitled-9871.0.jpeg\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Drinks</Card.Title>\r\n            <Card.Text>\r\n              Myes is a honey wine that is brewed and consumed in Ethiopia and\r\n              Eritrea. It is flavoured with the powdered leaves and twigs of\r\n              gesho (Rhamnus prinoides), a hops-like bittering agent that is a\r\n              species of buckthorn.It is often served in a flask-like pitcher or\r\n              bottle, called a bereles.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>Suwa</ListGroupItem>\r\n            <ListGroupItem>Miyes</ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Body>\r\n            <Card.Link href=\"https://en.wikipedia.org/wiki/Eritrean_cuisine#:~:text=bar%20in%20Eritrea-,Beverages,Mies)%20is%20also%20commonly%20served.\">\r\n              Suwa\r\n            </Card.Link>\r\n            <Card.Link href=\"https://en.wikipedia.org/wiki/Tej#:~:text=Tej%20(from%20Amharic%20%E1%8C%A0%E1%8C%80%2C%20pronounced,Tigrinya%2C%20and%20daadhi%20in%20Oromo.\">\r\n              Miyes\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: \"22rem\" }}>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"https://africanpalacetoronto.files.wordpress.com/2013/11/coffee-dsc_3514.jpg\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Coffee</Card.Title>\r\n            <Card.Text>\r\n              A coffee ceremony is a ritualized form of making and drinking\r\n              coffee.There is a routine of serving coffee on a daily basis,\r\n              mainly for the purpose of getting together with relatives,\r\n              neighbors, or other visitors. If coffee is politely declined, then\r\n              tea (Chai) will most likely be served.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>Shahi</ListGroupItem>\r\n            <ListGroupItem>Tsimuak</ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Body>\r\n            <Card.Link href=\"http://eritreanfoodanddrinks.blogspot.com/p/suwa-and-mes.html\">\r\n              Shahi\r\n            </Card.Link>\r\n            <Card.Link href=\"https://en.wikipedia.org/wiki/Culture_of_Eritrea\">\r\n              Tsimuak\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    initaliseBookings: () => dispatch(loadBookings()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport Booking from \"./components/booking/Booking\";\r\nimport Seating from \"./components/seating/Seating\";\r\nimport Home from \"./components/home/Home\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <header className=\"header-link\">\r\n          <Link className=\"link-element\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <Link className=\"link-element\" to=\"/booking\">\r\n            Booking\r\n          </Link>\r\n          <Link className=\"link-element\" to=\"/booking-list\">\r\n            Seating\r\n          </Link>\r\n        </header>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route path=\"/booking\" component={Booking} />\r\n        <Route path=\"/booking-list\" component={Seating} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { BOOKING_ADD, BOOKING_MARK_SEATED, BOOKING_LOADED } from \"./actions\";\r\n\r\nconst INITAL_BOOKINGS = [];\r\n\r\nfunction bookingReducer(state = INITAL_BOOKINGS, action) {\r\n  switch (action.type) {\r\n    case BOOKING_LOADED:\r\n      return state.concat(action.initalBookings);\r\n    case BOOKING_ADD:\r\n      return [...state, action.booking];\r\n    case BOOKING_MARK_SEATED:\r\n      return state.map((booking) => {\r\n        if (booking.booking_id === action.bookingId) {\r\n          return {\r\n            ...booking,\r\n            status: action.value,\r\n          };\r\n        } else return booking;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default bookingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport bookingReducer from \"./bookingrReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  bookings: bookingReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, reducer);\r\nconst initialState = [];\r\nconst middleware = [thunk];\r\nlet store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n// let persistor = persistStore(store);\r\nexport { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}